buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.0.RELEASE'
        springCloudVersion ='2.0.1.RELEASE'
		queryDslVersion = '4.1.3'
        commonsIoVersion = '2.6'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: "kotlin-allopen"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'

allOpen {
	annotation "javax.persistence.Entity"
}

group = 'com.rabbitcat'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	runtimeOnly('org.postgresql:postgresql')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	compile ("com.querydsl:querydsl-jpa:${queryDslVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-aws:${springCloudVersion}")
    compile("commons-io:commons-io:${commonsIoVersion}")
    kapt ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.4.RELEASE'
	compile group: 'joda-time', name: 'joda-time', version: '2.10.2'
}

kapt {
	// stubs are not needed in kapt3
	// generateStubs = true
	mapDiagnosticLocations = true // 1.2.30 include the Kotlin files into error reports
}

idea {
    module {
        def kaptMain = file('build/generated/source/kapt/main')
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain
    }
}
